

@model VinyLand.Models.Ad


@{
    ViewBag.Title = "UserSignedUp";
    Layout = Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<head>
    <script src="/Content/crop/crop/assets/jquery.min.js"></script>

    <script src="/Content/crop/crop/assets/croppie.js"></script>

    <link rel="stylesheet" href="/Content/crop/crop/assets/croppie.css" />
</head>
<body>
    @using (Html.BeginForm("EditRecord", "User", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.User)
        @Html.HiddenFor(model => model.Record.Id)
        <div class="card border-0 shadow my-5">
            <div class="card-body p-5">

                <div class="row">
                    <div class="col-xs-6" style="width:45%; min-width:30%;">




                        <div class="form-horizontal">
                            <h4>Record</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Record.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">

                                    @Html.EditorFor(model => model.Record.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Record.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Record.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Record.Price, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Record.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <hr />
                            <div class="form-group col">
                                <label class="control-label col-md-4">Condition</label>
                                <div class="dropdown col-md-6">
                                    @Html.DropDownListFor(model => model.Condition.condition, Model.slcond, "Choose record condition", new { @class = "form-control  dropdown-toggle" })
                                    @Html.ValidationMessageFor(model => model.Condition.condition, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <hr />
                            <div class="form-group">
                                <label class="control-label col-md-6">Replacement</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Condition.Replacement, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Condition.Replacement, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <h4>Artist</h4>
                            <hr />
                            <div class="form-group">
                                @Html.LabelFor(model => model.Artist.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Artist.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Artist.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <h4>Genre</h4>
                            <hr />
                            <div class="form-group col">
                                <label class="control-label col-md-2">Genre</label>
                                <div class="col-md-6">
                                    @Html.DropDownListFor(model => model.Genre.genre, Model.slgen, "Choose genre of record", new { @class = "form-control  dropdown-toggle" })
                                    @Html.ValidationMessageFor(model => model.Genre.genre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <h4>Label</h4>
                            <hr />
                            <div class="form-group">
                                <label class="control-label col-md-10">Name of Label</label>
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Label.NameOfLabel, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Label.NameOfLabel, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Label.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Label.Country, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            <h4>Type</h4>
                            <hr />
                            <div class="form-group">
                                <div> Lp @Html.RadioButtonFor(model => model.Record.Format, "Lp", new { @class = "form-control radio-inline" }) </div>
                                <div> Ep @Html.RadioButtonFor(model => model.Record.Format, "Ep", new { @class = "form-control radio-inline" }) </div>
                            </div>






                        </div>




                    </div>

                    <div class="col-xs-6" style="width:45%; padding-left: 10%;">



                        <h3 align="center">Upload record picture :</h3>

                        <div class="panel-body" align="center" style="padding-bottom:30px;">
                            <div id="uploaded"><img style="background-color: #FFC107;" src="@Url.Content(Model.Record.Picture)" width=300 height=300 class="avatar img-circle img-thumbnail" alt="avatar"></div>


                            <input type="file" name="upload" id="upload" />
                            <hr />


                        </div>



                        <h4>Songs</h4>
                        <hr />
                        @for (int i = 0; i <= Model.Songs.Count - 1; i++)
                        {
                            <div class="form-row">
                                <label> S@(i + 1):</label>
                                <div class="col-xs-4" style="width:70%">
                                    @Html.EditorFor(model => model.Songs[i].NameOfSong, new { htmlAttributes = new { @class = " form-control" } })
                                </div>

                                <div class="col-xs-2" style="width:20%">
                                    @Html.EditorFor(model => model.Songs[i].Duration, new { htmlAttributes = new { @class = "  form-control", } })
                                </div>

                            </div>
                            <hr />


                        }
                        @for (int i = Model.Songs.Count ; i < 5; i++)
                        {
                            Model.Songs.Add(new VinyLand.Models.Song { });

                            <div class="form-row">
                                <label> S@(i + 1):</label>
                                <div class="col-xs-4" style="width:70%">
                                    @Html.EditorFor(model => model.Songs[i].NameOfSong, new { htmlAttributes = new { @class = " form-control" } })
                                </div>

                                <div class="col-xs-2" style="width:20%">
                                    @Html.EditorFor(model => model.Songs[i].Duration, new { htmlAttributes = new { @class = "  form-control", } })
                                </div>

                            </div>
                            <hr />




                        }

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-primary" />
                            </div>
                        </div>


                        <div id="myModal" class="modal" role="dialog">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal">&times;</button>

                                    </div>
                                    <div class="modal-body">
                                        <div class="row">
                                            <div class="col-md-8 text-center">
                                                <div id="image" style="width:250px; margin-top:20px"></div>
                                            </div>
                                            <div class="col-md-4" style="padding-top:20px;">
                                                <br />
                                                <br />
                                                <br />
                                                <button class="btn btn-primary crop_image">Crop & Upload Image</button> 
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>







                    </div>
                </div>
            </div>
        </div>
    }



</body>
<script>
        $(document).ready(function () {

            $image_crop = $('#image').croppie({
                enableExif: true,
                viewport: {
                    width: 200,
                    height: 200,
                    type: 'square' //circle
                },
                boundary: {
                    width: 300,
                    height: 300
                }
            });

            $('#upload').on('change', function () {
                var reader = new FileReader();
                reader.onload = function (event) {
                    $image_crop.croppie('bind', {
                        url: event.target.result
                    }).then(function () {
                        console.log('jQuery bind complete');
                    });
                }
                reader.readAsDataURL(this.files[0]);
                $('#myModal').modal('show');
            });



            $('.crop_image').click(function (event) {
                $image_crop.croppie('result', {
                    type: 'canvas',
                    size: 'viewport'
                }).then(function (response) {
                    $.ajax({
                        url: '<?php echo base_url(); ?>crop/upload',
                        type: "POST",
                        data: { "image": response },
                        success: function (data) {
                            $('#myModal').modal('hide');
                            $('#uploaded').html(data);
                        }
                    });
                })
            });

        });
</script>




<style>
    .hrv {
        border: none;
        border-left: 1px solid hsla(200, 10%, 50%,100);
        height: 100vh;
        width: 1px;
    }
</style>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}

